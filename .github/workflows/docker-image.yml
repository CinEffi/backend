name: CI/CD using github actions & docker

on:
  push:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Docker build & push to prod
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/docker-test .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-test

      - name: Docker build & push to dev
        if: contains(github.ref, 'dev')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/docker-test .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-test

      # docker-compose.yml 파일을 EC2로 복사
      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.EC2_USERNAME }}
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu"

      - name: Deploy to prod (임시로 dev 서버에 배포)
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.EC2_USERNAME }}
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu
            sed -i 's|${DOCKER_USERNAME}|'"${{ secrets.DOCKER_USERNAME }}"'|g' docker-compose.yml
            sed -i 's|${REDIS_PASSWORD}|'"${{ secrets.REDIS_PASSWORD }}"'|g' docker-compose.yml
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d

      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'dev')
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.EC2_USERNAME }}
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu
            sed -i 's|${DOCKER_USERNAME}|'"${{ secrets.DOCKER_USERNAME }}"'|g' docker-compose.yml
            sed -i 's|${REDIS_PASSWORD}|'"${{ secrets.REDIS_PASSWORD }}"'|g' docker-compose.yml
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d
            
      
